version: '3'

services:
  mongodb:
    image: mongo:4.4
    container_name: solar-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./deploy/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: solar_db
    restart: always
    networks:
      - solar-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  api:
    build:
      context: .
      dockerfile: deploy/Dockerfile.api
    container_name: solar-api
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_AUTH_SOURCE=admin
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - MODEL_CACHE_SIZE=${MODEL_CACHE_SIZE:-100}
      - MODEL_CACHE_TTL=${MODEL_CACHE_TTL:-3600}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - MAX_REQUESTS_PER_MINUTE=${MAX_REQUESTS_PER_MINUTE:-60}
      - SESSION_EXPIRY=${SESSION_EXPIRY:-86400}
      - CHROMA_DB_PATH=/app/data/vector_db/chromadb
      - DATA_DIR=/app/data/documents
      - META_INDEX_PATH=/app/data/vector_db/meta_index.json
    depends_on:
      - mongodb
    restart: always
    networks:
      - solar-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  frontend:
    build:
      context: .
      dockerfile: deploy/Dockerfile.frontend
    container_name: solar-frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app/frontend
    environment:
      - API_URL=http://api:8000/ask
      - API_HOST=api
      - API_PORT=8000
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    depends_on:
      - api
    restart: always
    networks:
      - solar-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  nginx:
    image: nginx:alpine
    container_name: solar-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/nginx/certs:/etc/nginx/certs:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
      - frontend
    restart: always
    networks:
      - solar-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

volumes:
  mongo_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  solar-network:
    driver: bridge